PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE users (username TEXT PRIMARY KEY, password TEXT, changepw INTEGER, level INTEGER);
INSERT INTO "users" VALUES('admin','admin',0,9);
INSERT INTO "users" VALUES('dave','elly',0,1);
CREATE TABLE uris  (id INTEGER PRIMARY KEY, uri TEXT);
INSERT INTO "uris" VALUES(1,'fulltext:match');
INSERT INTO "uris" VALUES(2,'http://www.w3.org/2001/XMLSchema#int');
INSERT INTO "uris" VALUES(3,'http://www.w3.org/2001/XMLSchema#long');
INSERT INTO "uris" VALUES(4,'http://www.w3.org/2001/XMLSchema#float');
INSERT INTO "uris" VALUES(5,'http://www.w3.org/2001/XMLSchema#double');
INSERT INTO "uris" VALUES(6,'http://www.w3.org/2001/XMLSchema#duration');
INSERT INTO "uris" VALUES(7,'http://www.w3.org/2001/XMLSchema#dateTime');
CREATE TABLE blanks  (id INTEGER PRIMARY KEY, blank TEXT);
CREATE TABLE literals  (id INTEGER PRIMARY KEY, text TEXT, language TEXT, datatype INTEGER);
CREATE INDEX textindex ON literals (text);
CREATE TABLE triples  (subjectUri INTEGER, subjectBlank INTEGER, predicateUri INTEGER, objectUri INTEGER, objectBlank INTEGER, objectLiteral INTEGER, contextUri INTEGER);
CREATE VIRTUAL TABLE fulltext using fts4 (tokenize=porter, text TEXT);
CREATE INDEX spindex ON triples (subjectUri, subjectBlank, predicateUri);
CREATE INDEX uriindex ON uris (uri);
CREATE INDEX tliteralndx ON triples (objectLiteral);
COMMIT;
